#!/bin/bash

occ_cmd() {
    sudo -u www-data php ${OWNCLOUD_ROOT_DIR}/occ "$@"
}

# $1 config key. e.g. db_name
occ_config_get(){
    occ_cmd config:system:get ${1}
}

# $1 config key. e.g. db_name
# $2 value
occ_config_set() {
    local key=${1}
    local value=${2}
    if [[ -z "${value}" ]]; then
	if [[ -n "$(occ_config_get ${key})" ]]; then occ_cmd config:system:delete ${key}; fi
    else
	occ_cmd config:system:set ${key} --value="${value}"
    fi
}

# $1 key
# $2 array with ' ' as seperator, if ' ' is in array element, use '\ '.Use "\\ " for bash command
occ_config_set_array() {
    local key="${1}"
    local values="${2}"

    if [[ -z "${values}" ]]; then
	if [[ -n "$(occ_config_get ${key})" ]]; then occ_cmd config:system:delete ${key}; fi
    else
	read -r -d '' parse_scripts <<"EOF"
$value=preg_split("/(?<!(\\\\)) +/", $argv[2]);
$value=preg_replace("/\\\\ /", " ", $value);
echo json_encode(array('system' => array($argv[1]=>$value)));
EOF
	local json_file=$(mktemp --suffix=_${key}.json)
	sudo -u www-data php -r "${parse_scripts}" "${key}" "${values}" > ${json_file}
	chown www-data ${json_file}
	occ_cmd config:import ${json_file}
	rm ${json_file}
    fi

}

# $1 php option name
# $2 values
# $3 .htaccess file , default: ${OWNCLOUD_ROOT_DIR}/.htaccess
htaccess_php_set(){
    local option_name=${1}
    local option_values=${2}
    local file=${3:-${OWNCLOUD_ROOT_DIR}/.htaccess}

    sed -i "s/php_value[ tab]\+${option_name}.*/php_value ${option_name} ${option_values}/" "${file}"
}

occ_init_basic(){
    # install according to
    # https://doc.owncloud.org/server/8.2/admin_manual/configuration_server/occ_command.html

    if [[ -n "$(occ_cmd | grep 'not installed')" ]]; then
	echo "Start fresh install"
	occ_cmd maintenance:install \
	    --database="$DB_TYPE" \
	    --database-host="${DB_HOST}" \
	    --database-name="${DB_NAME}" \
	    --database-user="${DB_USER}" \
	    --database-pass="${DB_PASS}" \
	    --admin-user="${ADMIN_USER}" \
	    --admin-pass="${ADMIN_PASS}" \
	    --data-dir="${OWNCLOUD_DATA_DIR}" \
	    --no-interaction
    else
	occ_config_set dbtype "${DB_TYPE}"   # TODO: db:convert-type
	occ_config_set dbhost "${DB_HOST}"
	occ_config_set dbname "${DB_NAME}"
	occ_config_set dbuser "${DB_USER}"
	occ_config_set dbpassword "${DB_PASS}"
	occ_config_set datadirectory "${OWNCLOUD_DATA_DIR}"
    fi
}

occ_init_smtp(){
    if [[ -n "${OC_SMTP_HOST}" ]]; then
	occ_config_set mail_smtpmode "smtp"
	occ_config_set mail_smtphost "${OC_SMTP_HOST}"
	occ_config_set mail_smtpsecure "${OC_SMTP_SECURE}"
	occ_config_set mail_smtpport "${OC_SMTP_PORT}"
        occ_config_set mail_from_address "$(echo "${OC_SMTP_EMAIL}" | cut -d '@' -f 1)"
	occ_config_set mail_domain "$(echo "${OC_SMTP_EMAIL}" | cut -d '@' -f 2)"

	occ_config_set mail_smtpauthtype "${OC_SMTP_AUTH_TYPE}"
	occ_config_set mail_smtpauth "true"
	occ_config_set mail_smtpname "${OC_SMTP_USER}"
	occ_config_set mail_smtppassword "${OC_SMTP_PASS}"
    fi
}

occ_init_config(){
    occ_init_basic

    occ_config_set default_language "${OC_DEFAULT_LANGUAGE}"
    occ_config_set defaultapp "${OC_DEFAULT_APP}"
    occ_config_set_array trusted_domains "${OC_TRUSTED_DOMAINS}"
    occ_config_set has_internet_connection "${OC_HAS_INTERNET}"

    occ_init_smtp
    
    htaccess_php_set upload_max_filesize "${OC_UPLOAD_MAX_FILESIZE}"
    htaccess_php_set post_max_size "${OC_UPLOAD_MAX_FILESIZE}"
}
